# Generated by Django 3.2 on 2022-04-18 16:58

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_brand', models.BooleanField(blank=True, default=False, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='JoinBrand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=50)),
                ('brand_name', models.CharField(max_length=50)),
                ('brand_email', models.CharField(max_length=300)),
                ('brand_website', models.URLField(blank=True, max_length=300, null=True)),
                ('brand_instagram', models.CharField(blank=True, max_length=50, null=True)),
                ('brand_tiktok', models.CharField(blank=True, max_length=50, null=True)),
                ('brand_youtube', models.URLField(blank=True, max_length=300, null=True)),
                ('brand_location', models.CharField(blank=True, max_length=100, null=True)),
                ('brand_description', models.CharField(blank=True, max_length=400, null=True)),
                ('lifestyle', models.BooleanField(default=False)),
                ('fashion', models.BooleanField(default=False)),
                ('beauty', models.BooleanField(default=False)),
                ('health_fitness', models.BooleanField(default=False)),
                ('travel', models.BooleanField(default=False)),
                ('food_drink', models.BooleanField(default=False)),
                ('model', models.BooleanField(default=False)),
                ('comedy_entertainment', models.BooleanField(default=False)),
                ('art_photography', models.BooleanField(default=False)),
                ('music_dance', models.BooleanField(default=False)),
                ('entrepreneur_business', models.BooleanField(default=False)),
                ('family_children', models.BooleanField(default=False)),
                ('animals_pets', models.BooleanField(default=False)),
                ('athlete_sports', models.BooleanField(default=False)),
                ('celebrity_public_pigure', models.BooleanField(default=False)),
                ('adventure_outdoors', models.BooleanField(default=False)),
                ('actor', models.BooleanField(default=False)),
                ('education', models.BooleanField(default=False)),
                ('gaming', models.BooleanField(default=False)),
                ('lgbtq', models.BooleanField(default=False)),
                ('technology', models.BooleanField(default=False)),
                ('healthcare', models.BooleanField(default=False)),
                ('vegan', models.BooleanField(default=False)),
                ('cannabis', models.BooleanField(default=False)),
                ('skilled_trades', models.BooleanField(default=False)),
                ('automotive', models.BooleanField(default=False)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('image3', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('image4', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('image5', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('is_added', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='JoinInfluencer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('influencer_username', models.CharField(max_length=200)),
                ('full_name', models.CharField(default='', max_length=150)),
                ('email_address', models.EmailField(default='', max_length=300)),
                ('password', models.CharField(default='', max_length=30)),
                ('location', models.CharField(default='', max_length=100)),
                ('title_influencer', models.CharField(default='', max_length=80)),
                ('description_influencer', models.CharField(default='', max_length=1000)),
                ('gender_influencer', models.CharField(default='', max_length=20)),
                ('instagram_username', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('instagram_followers', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('tiktok_username', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('tiktok_followers', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('youtube_url', models.URLField(blank=True, default='', null=True)),
                ('youtube_followers', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('twitter_username', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('twitter_followers', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('twitch_username', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('twitch_followers', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('website', models.URLField(blank=True, default='', null=True)),
                ('lifestyle', models.BooleanField(default=False)),
                ('fashion', models.BooleanField(default=False)),
                ('beauty', models.BooleanField(default=False)),
                ('health_fitness', models.BooleanField(default=False)),
                ('travel', models.BooleanField(default=False)),
                ('food_drink', models.BooleanField(default=False)),
                ('model', models.BooleanField(default=False)),
                ('comedy_entertainment', models.BooleanField(default=False)),
                ('art_photography', models.BooleanField(default=False)),
                ('music_dance', models.BooleanField(default=False)),
                ('entrepreneur_business', models.BooleanField(default=False)),
                ('family_children', models.BooleanField(default=False)),
                ('animals_pets', models.BooleanField(default=False)),
                ('athlete_sports', models.BooleanField(default=False)),
                ('celebrity_public_pigure', models.BooleanField(default=False)),
                ('adventure_outdoors', models.BooleanField(default=False)),
                ('actor', models.BooleanField(default=False)),
                ('education', models.BooleanField(default=False)),
                ('gaming', models.BooleanField(default=False)),
                ('lgbtq', models.BooleanField(default=False)),
                ('technology', models.BooleanField(default=False)),
                ('healthcare', models.BooleanField(default=False)),
                ('vegan', models.BooleanField(default=False)),
                ('cannabis', models.BooleanField(default=False)),
                ('skilled_trades', models.BooleanField(default=False)),
                ('automotive', models.BooleanField(default=False)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('image3', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('image4', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('image5', models.ImageField(blank=True, null=True, upload_to='images/')),
            ],
        ),
        migrations.CreateModel(
            name='InfluencerPackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choose_platform', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('content_category', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('package_offering', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('package_include', models.CharField(blank=True, default='', max_length=1000, null=True)),
                ('package_price', models.IntegerField(blank=True, default=0, null=True)),
                ('influencer_username', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.joininfluencer')),
            ],
        ),
        migrations.CreateModel(
            name='InfluencerFaq',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('faq_question', models.CharField(max_length=500)),
                ('faq_answer', models.CharField(max_length=700)),
                ('influencer_username', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.joininfluencer')),
            ],
        ),
        migrations.CreateModel(
            name='EditPortfolioImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_url', models.ImageField(blank=True, default='', max_length=300, null=True, upload_to='')),
                ('influencer_username', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.joininfluencer')),
            ],
        ),
        migrations.CreateModel(
            name='BrandorInfluencer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='accountsCheck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auth_token', models.CharField(max_length=100)),
                ('is_verified', models.BooleanField(default=False)),
                ('crated_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
